// <auto-generated />
using EmailNewsletter.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmailNewsletter.Migrations
{
    [DbContext(typeof(NewsletterContext))]
    partial class NewsletterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmailNewsletter.Models.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("EmailNewsletter.Models.EmailTopic", b =>
                {
                    b.Property<int>("EmailId")
                        .HasColumnType("int");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("EmailId", "TopicId");

                    b.HasIndex("TopicId");

                    b.ToTable("EmailTopics");
                });

            modelBuilder.Entity("EmailNewsletter.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("EmailNewsletter.Models.EmailTopic", b =>
                {
                    b.HasOne("EmailNewsletter.Models.Email", "Email")
                        .WithMany("EmailTopics")
                        .HasForeignKey("EmailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmailNewsletter.Models.Topic", "Topic")
                        .WithMany("EmailTopics")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Email");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("EmailNewsletter.Models.Email", b =>
                {
                    b.Navigation("EmailTopics");
                });

            modelBuilder.Entity("EmailNewsletter.Models.Topic", b =>
                {
                    b.Navigation("EmailTopics");
                });
#pragma warning restore 612, 618
        }
    }
}
